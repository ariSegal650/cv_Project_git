{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AACuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHjB,iEAAoB,CAAC,MAAM,CAAC,EAC5B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;ACAjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,KAAK,CAAC;KACf;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,sEAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCqC;AAEF;AACT;AACkB;AACpB;AACQ;AACI;AACA;AACW;AACZ;AACG;AACN;AAC0B;;AAyBxE,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;0GAbtB,oEAAa;QACb,iEAAgB;QAChB,uDAAW;QACX,iEAAa;QACb,qEAAe;QACf,qEAAe;QACf,gFAAoB;QACpB,mEAAgB;QAChB,wEAAgB;QAChB,kEAAa;QACb,0FAAuB;mIAKd,SAAS,mBAnBlB,wDAAY;QACZ,0EAAa,aAGb,oEAAa;QACb,iEAAgB;QAChB,uDAAW;QACX,iEAAa;QACb,qEAAe;QACf,qEAAe;QACf,gFAAoB;QACpB,mEAAgB;QAChB,wEAAgB;QAChB,kEAAa;QACb,0FAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;ACjC4B;AACE;AACZ;;;;;;;;;;;ICqCjB,sEAA+C;IACxB,wWAAa,mGAC3D,IAD+E;IAApD,4DAAqD;IACrD,iFAA6D;IAAnC,6WAAa,oGAA4B,IAAP;IAAC,4DAAa;;;;IADvD,0DAAiC;IAAjC,mGAAiC;IAC1B,0DAAkC;IAAlC,oGAAkC;;;;IAUhE,sEAA4C;IACrB,wWAAa,gGAC3D,IAD4E;IAAjD,4DAAkD;IAClD,iFAA0D;IAAhC,6WAAa,iGAAyB,IAAP;IAAC,4DAAa;;;;IADpD,0DAA8B;IAA9B,gGAA8B;IACvB,0DAA+B;IAA/B,iGAA+B;;;;IAiB1D,4EAAiE;IAAzB,mUAAa,kFAC/E,IAD0F;IAAhE,4DAAiE;;;IAAzB,mFAAwB;;;;IAE/D,0EAAoE;IAC5D,uDAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,0EAAe;IAAA,4DAAK;IACxB,4EAA6C;IAA1B,mSAAa,mFAC/D,IAD2E;IAA5C,4DAA6C;IAE7C,qEAAI;IAAA,wEAAa;IAAA,4DAAK;IACtB,4EAA2C;IAAxB,mSAAa,iFAC/D,IADyE;IAA1C,4DAA2C;IAC3C,qEAAI;IAAA,mFAAuB;IAAA,4DAAK;IAChC,6EAA8C;IAA3B,oSAAa,oFAC/D,IAD4E;IAA7C,4DAA8C;IAC9C,sEAAI;IAAA,mFAAuB;IAAA,4DAAK;IAChC,6EAAgD;IAA7B,oSAAa,sFAC/D,IAD8E;IAA/C,4DAAgD;IAChD,sEAAI;IAAA,oEAAQ;IAAA,4DAAK;IACjB,6EAA4C;IAAzB,oSAAa,kFAC/D,IAD0E;IAA3C,4DAA4C;IAC5C,sEAAI;IAAA,sEAAU;IAAA,4DAAK;IACnB,6EAA2C;IAAxB,oSAAa,iFAC/D,IADyE;IAA1C,4DAA2C;;;;IAbvC,0DAAW;IAAX,uFAAW;IAEI,0DAAyB;IAAzB,oFAAyB;IAGzB,0DAAuB;IAAvB,kFAAuB;IAEvB,0DAA0B;IAA1B,qFAA0B;IAE1B,0DAA4B;IAA5B,uFAA4B;IAE5B,0DAAwB;IAAxB,mFAAwB;IAExB,0DAAuB;IAAvB,kFAAuB;;;;IAlBlD,0EAA2D;IACnD,uDAAsB;IAAA,4DAAK;IAChC,qHAAiE;IAEhE,kHAgBM;IACN,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,6EAEmC;IAA3B,mVAAS,sFAAgB,KAAC;IAC1B,8DACJ;IAAA,4DAAS;;;;;IAzBT,0DAAsB;IAAtB,qGAAsB;IACP,0DAAkB;IAAlB,0FAAkB;IAElB,0DAAa;IAAb,yFAAa;IAiB5B,0DAAkB;IAAlB,4FAAkB;;;IAyB1C,0EAAuC;IACnC,qEAAwB;IAC5B,4DAAM;;;IADG,0DAAW;IAAX,wIAAW;;;IAKhB,yEAA8B;IAAA,gEAAK;IAAA,4DAAK;;;IAExC,yEAAgC;IAAA,gEAAK;IAAA,4DAAK;;;IAE1C,yEAAmC;IAAA,mEAAQ;IAAA,4DAAK;;;IAPpD,0EAAoD;IAC5C,kEAAO;IAAA,4DAAK;IAChB,oEAAiB;IACjB,+GAAwC;IACxC,oEAAG;IAAA,uDAAO;IAAA,4DAAI;IACd,+GAA0C;IAC1C,oEAAG;IAAA,uDAAS;IAAA,4DAAI;IAChB,iHAAgD;IAChD,qEAAG;IAAA,wDAAY;IAAA,4DAAI;;;IALd,0DAAS;IAAT,4EAAS;IACX,0DAAO;IAAP,2EAAO;IACL,0DAAW;IAAX,8EAAW;IACb,0DAAS;IAAT,6EAAS;IACP,0DAAc;IAAd,iFAAc;IAChB,0DAAY;IAAZ,gFAAY;;;IAQX,kFAAqH;;;;IAApD,8GAAgC;;;IAFrG,0EAA+E;IACxE,uDAAuB;IAAA,4DAAI;IAC9B,2IAAqH;IACzH,4DAAM;;;;IAFC,0DAAuB;IAAvB,+FAAuB;IACP,0DAAyB;IAAzB,gGAAyB;;;IAM5C,kFAA+G;;;;IAAjD,2GAA6B;;;IAF/F,0EAAyE;IAClE,uDAAoB;IAAA,4DAAI;IAC3B,2IAA+G;IACnH,4DAAM;;;;IAFC,0DAAoB;IAApB,4FAAoB;IACJ,0DAAsB;IAAtB,6FAAsB;;;IA2BJ,uEAAuC;IAAC,6DAAC;IAAA,4DAAO;;;IAEnD,uEAA6C;IAAA,4DAAC;IAAA,4DAAO;;;IAL/E,0EAA0D;IAElD,qEAA0B;IAC1B,qEAAI;IAAC,uDAAgB;IAAA,yHAAgD;IAAC,uDAAa;IAAA,4DAAK;IAE5F,qEAAI;IAAC,uDAAiB;IAAA,yHAAqD;IAAC,wDAAkB;IAAA,4DAAK;IACnG,qEAAG;IAAA,wDAAa;IAAA,4DAAI;;;IAHX,0DAAgB;IAAhB,2FAAgB;IAAO,0DAA8B;IAA9B,kGAA8B;IAAY,0DAAa;IAAb,wFAAa;IAElF,0DAAiB;IAAjB,4FAAiB;IAAO,0DAAoC;IAApC,wGAAoC;IAAW,0DAAkB;IAAlB,6FAAkB;IAC3F,0DAAa;IAAb,8EAAa;;;IAXhC,sEAAsC;IAE1B,uDAAc;IAAA,4DAAK;IACvB,oEAAiB;IACjB,0EAAgC;IAC5B,kHAOM;IACV,4DAAM;;;;;IAXF,0DAAc;IAAd,+EAAc;IAGkB,0DAAa;IAAb,yFAAa;;AD1JlE,MAAM,aAAa;IAqBxB;QAlBA,sDAAsD;QACrD,QAAG,GAAC,EAAE;QACP,cAAS,GAAG,EAAE,CAAC;QACf,cAAS,GAAG,EAAE;QAEd,aAAQ,GAAG,EAAE,CAAC;QACd,UAAK,GAAG,EAAE;QACV,QAAG,GAAG,EAAE;QACR,aAAQ,GAAY;YAClB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE;SAC7B,CAAC;QACF,gBAAW,GAAY;YACrB,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE;SAC/B,CAAC;QACF,OAAE,GAAkB,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QACnR,8GAA8G;QAC9G,6GAA6G;QAC5G,WAAM,GAAc,IAAI,UAAU,EAAE,CAAC;IAGtC,CAAC;IAED,QAAQ;IACR,CAAC;IAED,OAAO;QACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,uDAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACvC,CAAC;IACD,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,uDAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,aAAa,CAAC,CAAS;QACrB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,iEAAU,EAAE,CAAC;IACvC,CAAC;IACD,YAAY;QACV,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,IAAI,iEAAU,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,YAAY,CAAC,IAAI;QAEf,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC;YAE7C,IAAI,IAAI,GAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAChC,8BAA8B;YAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,KAAU,EAAE,EAAE;gBACxC,IAAI,CAAC,GAAG,GAAC,IAAI,CAAC,MAAM,CAAC,MAAgB;YACjC,CAAC;SACF;IAKH,CAAC;;0EAxDU,aAAa;2GAAb,aAAa;;QCV1B,yEAAkB;QAOc,4EAAiB;QAAA,4DAAK;QAC1B,8EACgD;QAA5C,4IAAU,wBAAoB,IAAC;QADnC,4DACgD;QAChD,wEAAgC;QAA7B,+QAAS,qEAAkB,KAAC;QAC3B,4EAAU;QAAA,+EAAmB;QAAA,4DAAW;QAIhD,0EAAkB;QACV,2EAAe;QAAA,4DAAK;QACxB,4EAA6D;QAA1C,qLAAuB;QAA1C,4DAA6D;QAEjE,2EAAmB;QACX,2EAAe;QAAA,4DAAK;QACxB,6EAAwD;QAArC,qLAAuB;QAA1C,4DAAwD;QAGhE,2EAA4B;QACpB,sEAAU;QAAA,4DAAK;QACnB,6EAAoC;QAAlB,+KAAiB;QAAnC,4DAAoC;QACpC,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,6EAAwC;QAApB,iLAAmB;QAAvC,4DAAwC;QACxC,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,6EAA0C;QAAvB,oLAAsB;QAAzC,4DAA0C;QAIlD,+EAAwB;QAKR,oEAAQ;QAAA,4DAAK;QACjB,4GAGM;QACN,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,8EAC4B;QAAxB,sIAAS,iBAAa,IAAC;QACvB,+DACJ;QAAA,4DAAS;QAEb,2EAA0B;QAClB,kEAAM;QAAA,4DAAK;QACf,4GAGM;QACN,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,8EACwB;QAApB,sIAAS,aAAS,IAAC;QACnB,+DACJ;QAAA,4DAAS;QAKrB,+EAAuB;QAIX,4GA2BM;QACN,8EAEyB;QAAzB,sIAAS,kBAAc,IAAC;QACxB,+DACJ;QAAA,4DAAS;QAW7B,2EAAoB;QAGZ,4GAEM;QACN,6GASM;QAEN,2EAAmB;QACO,sEAAS;QAAA,4DAAK;QACpC,qEAAiB;QACjB,4GAGM;QACN,0EAAqB;QAAC,mEAAM;QAAA,4DAAK;QACjC,qEAAiB;QACjB,4GAGM;QAGV,4DAAM;QAIV,2EAAmB;QAIJ,wDAAa;QAAA,4DAAI;QAExB,2EAAmB;QACf,wDACJ;QAAA,4DAAM;QAEV,2EAAmB;QACf,4GAeM;QAEV,4DAAM;;QA/J6B,2DAAuB;QAAvB,kFAAuB;QAIvB,0DAAuB;QAAvB,kFAAuB;QAK5B,0DAAiB;QAAjB,4EAAiB;QAEf,0DAAmB;QAAnB,8EAAmB;QAEpB,0DAAsB;QAAtB,iFAAsB;QAUlB,0DAAe;QAAf,oFAAe;QAYf,0DAAY;QAAZ,iFAAY;QAiBS,0DAAM;QAAN,2EAAM;QA8C5C,0DAAmB;QAAnB,mFAAmB;QAGf,0DAA4B;QAA5B,sGAA4B;QAcK,0DAAe;QAAf,oFAAe;QAMlB,0DAAY;QAAZ,iFAAY;QAcrD,0DAAa;QAAb,8EAAa;QAGhB,0DACJ;QADI,yFACJ;QAGmB,0DAAM;QAAN,2EAAM;;;;;;;;;;;;;;;;AC/JlC,MAAM,UAAU;CAOtB;;;;;;;;;;;;;;;ACLM,MAAM,WAAW;IAGpB,YAAY,QAAe,EAAC,GAAgB;QAD5C,QAAG,GAAc,EAAE,CAAC;QAExB,IAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC;QACvB,IAAI,CAAC,GAAG,GAAC,GAAG,CAAC;IACT,CAAC;CAEJ;;;;;;;;;;;;;;;ACVM,MAAM,KAAK;IAGd,YAAY,CAAQ,EAAC,CAAQ;QACjC,IAAI,CAAC,IAAI,GAAC,CAAC,CAAC;QACZ,IAAI,CAAC,KAAK,GAAC,CAAC;IACR,CAAC;CACJ;;;;;;;;;;;;;;;ACPD,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AACzD,uDAAuD;AACV;AACK;AAClD,4DAA4D;AAC5D,iEAAiE;AAEjE,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,cAAc,GAAG;IACrB,MAAM,EAAE,yCAAyC;IACjD,UAAU,EAAE,iCAAiC;IAC7C,SAAS,EAAE,iBAAiB;IAC5B,aAAa,EAAE,6BAA6B;IAC5C,iBAAiB,EAAE,cAAc;IACjC,KAAK,EAAE,2CAA2C;IAClD,aAAa,EAAE,cAAc;CAE9B,CAAC;AAEF,sBAAsB;AACtB,MAAM,GAAG,GAAG,2DAAa,CAAC,cAAc,CAAC,CAAC;AAC1C,MAAM,SAAS,GAAG,gEAAY,CAAC,GAAG,CAAC,CAAC;AACpC,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/main/main.component.ts","./src/app/components/main/main.component.html","./src/app/models/Experience.ts","./src/app/models/mainContect.ts","./src/app/models/skill.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-main></app-main>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './components/main/main.component';\nimport { FormsModule } from '@angular/forms';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSliderModule,\n    MatProgressBarModule,\n    HttpClientModule,\n    MatStepperModule,\n    MatTabsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Experience } from 'src/app/models/Experience';\nimport { mainContect } from 'src/app/models/mainContect';\nimport { skill } from 'src/app/models/skill';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  \n  // display=\"height: 0;display: none; clip-path: none;\"\n   url=\"\"\n  inputName = \"\";\n  inputAbut = \"\"\n\n  linkdein = \"\";\n  email = ''\n  tel = ''\n  arrSkils: skill[] = [\n    { name: \"skile\", value: 70 }\n  ];\n  arrLanguage: skill[] = [\n    { name: \"english\", value: 70 }\n  ];\n  MC: mainContect[] = [{ headline: \"experiense\", arr: [{ dateStart: \"\", dateEnd: \"\", compnyName: \"\", compnyAddres: \"\", position: \"\", content: \"\" }] }, { headline: \"Education\", arr: [{ dateStart: \"\", dateEnd: \"\", compnyName: \"\", compnyAddres: \"\", position: \"\", content: \"\" }] }]\n  // arrExperience:Experience[]=[{dateStart:\"\",dateEnd:\"\",compnyName:\"\",compnyAddres:\"\",position:\"\",content:\"\"}]\n  // arrEducation:Experience[]=[{dateStart:\"\",dateEnd:\"\",compnyName:\"\",compnyAddres:\"\",position:\"\",content:\"\"}]\n   reader:FileReader = new FileReader();\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  newSkil() {\n    this.arrSkils.push(new skill(\"\", 50))\n  }\n  newLanguage() {\n    this.arrLanguage.push(new skill(\"\", 70));\n  }\n  newExperience(a: number) {\n    this.MC[a].arr.push(new Experience())\n  }\n  newMainInput(){\n    this.MC.push(new mainContect(\"\",[new Experience()]))\n  }\n\n  onFileUpload(img0) {\n    \n    if (img0.target.files[0] && img0.target.files){\n    \n     let file =img0.target.files[0];\n      this.reader.readAsDataURL(file);\n      // this.display=\"display:grid\"\n      this.reader.onload = (event: any) => {\n  this.url=this.reader.result as string\n      }\n    }\n     \n   \n    \n\n  }\n\n}\n","<div class=\"main\">\n    <div class=\"input\">\n        <div>\n            <mat-tab-group>\n                <mat-tab label=\"First\">\n                    <div class=\"header\">\n                        <div class=\"img1\">\n                            <h1>upload profil img</h1>\n                            <input type=\"file\" style=\"display: none;\" multiple accept=\"image/*\"\n                                (change)=\"onFileUpload($event)\" #selectFile>\n                            <a (click)=\"selectFile.click()\">\n                                <mat-icon>add_photo_alternate</mat-icon>\n                            </a>\n                        </div>\n\n                        <div class=\"name\">\n                            <h1>enter your name</h1>\n                            <input type=\"text\" [(ngModel)]=\"inputName\" value=\"full name\">\n                        </div>\n                        <div class=\"abuot\">\n                            <h1>enter about you</h1>\n                            <input type=\"text\" [(ngModel)]=\"inputAbut\" value=\"abut\">\n                        </div>\n                    </div>\n                    <div class=\"contact center\">\n                        <h1>your phone</h1>\n                        <input type=\"tel\" [(ngModel)]=\"tel\">\n                        <h1>your email</h1>\n                        <input type=\"email\" [(ngModel)]=\"email\">\n                        <h1>your linkdein</h1>\n                        <input type=\"text\" [(ngModel)]=\"linkdein\">\n                    </div>\n                </mat-tab>\n\n                <mat-tab label=\"Second\">\n\n                    <div class=\"aside center\">\n\n                        <div class=\"Language center\">\n                            <h2>Language</h2>\n                            <div *ngFor=\"let i of arrLanguage;let p=index\">\n                                <input type=\"text\" [(ngModel)]=\"arrLanguage[p].name\">\n                                <mat-slider aria-label=\"\" [(ngModel)]=\"arrLanguage[p].value\"></mat-slider>\n                            </div>\n                            <h4>new Language</h4>\n                            <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\"\n                                (click)=\"newLanguage()\">\n                                +\n                            </button>\n                        </div>\n                        <div class=\"skils center\">\n                            <h2>Skilss</h2>\n                            <div *ngFor=\"let i of arrSkils;let p=index\">\n                                <input type=\"text\" [(ngModel)]=\"arrSkils[p].name\">\n                                <mat-slider aria-label=\"\" [(ngModel)]=\"arrSkils[p].value\"></mat-slider>\n                            </div>\n                            <h4>new skill</h4>\n                            <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\"\n                                (click)=\"newSkil()\">\n                                +\n                            </button>\n                        </div>\n                      \n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Third\">\n                   \n                        <div class=\"mainEducation\">\n                            <!--  -->\n                            <div class=\"ArrEducation\" *ngFor=\"let i of MC;let p=index\">\n                               <h2> {{'{'+i.headline+'}'}}</h2>\n                               <input type=\"text\" *ngIf=\"p!=0 && p!=1\" [(ngModel)]=\"i.headline\">\n                                <!-- file -->\n                                <div *ngFor=\"let z of MC[p].arr;let x=index\" class=\"inputEducation\">\n                                    <h3>< {{x+1}} ></h3>\n                                    <h4>date start work</h4>\n                                    <input type=\"date\" [(ngModel)]=\"z.dateStart\">\n                                   \n                                    <h4>date end work</h4>\n                                    <input type=\"text\" [(ngModel)]=\"z.dateEnd\">\n                                    <h4>compony/education name </h4>\n                                    <input type=\"text\" [(ngModel)]=\"z.compnyName\">\n                                    <h4>compny/education Addres</h4>\n                                    <input type=\"text\" [(ngModel)]=\"z.compnyAddres\">\n                                    <h4>position</h4>\n                                    <input type=\"text\" [(ngModel)]=\"z.position\">\n                                    <h4>start work</h4>\n                                    <input type=\"text\" [(ngModel)]=\"z.content\">\n                                    \n                                </div>\n                                <h5>new {{i.headline}}</h5>\n                                <button mat-mini-fab color=\"accent\"\n                                        aria-label=\"Example icon button with a plus one icon\"\n                                        (click)=\"newExperience(p)\">\n                                        +\n                                    </button>\n                            </div>\n                            <button mat-mini-fab color=\"accent\"\n                            aria-label=\"Example icon button with a plus one icon\"\n                            (click)=\"newMainInput()\">\n                            +\n                        </button>\n                        </div>\n\n\n                  \n                </mat-tab>\n            </mat-tab-group>\n\n\n        </div>\n    </div>\n    <div class=\"output\">\n\n        <div class=\"aside\">\n            <div class=\"img\" *ngIf=\"reader.onload\">\n                <img [src]=\"url\" alt=\"\">\n            </div>\n            <div class=\"contact\" *ngIf=\"tel ||email ||linkdein\">\n                <h2>contact</h2>\n                <hr class=\"line\">\n                <h4 *ngIf=\"tel\" class=\"title\">Phone</h4>\n                <p>{{tel}}</p>\n                <h4 *ngIf=\"email\" class=\"title\">Email</h4>\n                <p>{{email}}</p>\n                <h4 *ngIf=\"linkdein\" class=\"title\">Linkdein</h4>\n                <p>{{linkdein}}</p>\n            </div>\n\n            <div class=\"skiil\">\n                <h2 class=\"headline\"> Languages</h2>\n                <hr class=\"line\">\n                <div class=\"Language ProgressBar\" *ngFor=\"let item of arrLanguage let p=index\">\n                    <p>{{arrLanguage[p].name}}</p>\n                    <mat-progress-bar *ngIf=\"arrLanguage[p].name\" mode=\"determinate\" value=\"{{arrLanguage[p].value}}\"></mat-progress-bar>\n                </div>\n                <h2 class=\"headline\"> skills</h2>\n                <hr class=\"line\">\n                <div class=\"skils ProgressBar\" *ngFor=\"let item of arrSkils let p=index\">\n                    <p>{{arrSkils[p].name}}</p>\n                    <mat-progress-bar *ngIf=\"arrSkils[p].name\" mode=\"determinate\" value=\"{{arrSkils[p].value}}\"></mat-progress-bar>\n                </div>\n\n\n            </div>\n\n\n        </div>\n        <div class=\"right\">\n            <div class=\"header\">\n\n                <div class=\"name\">\n                    <p>{{inputName}}</p>\n                </div>\n                <div class=\"abuot\">\n                    {{inputAbut}}\n                </div>\n            </div>\n            <div class=\"main1\">\n                <div *ngFor=\"let i of MC;let p=index\">\n                    <div class=\"experiense\">\n                        <h2>{{i.headline}}</h2>\n                        <hr class=\"line\">\n                        <div class=\"ExperienceLineSide\">\n                            <div class=\"onee\" *ngFor=\"let z of MC[p].arr;let x=index\">\n                                <div class=\"date\">\n                                    <div class=\"circle\"></div>\n                                    <h4> {{z.dateStart}} <span *ngIf=\"z.dateStart && z.dateEnd\"> -</span> {{z.dateEnd}}</h4>\n                                </div>\n                                <h5> {{z.compnyName}} <span *ngIf=\"z.compnyName && z.compnyAddres\">|</span> {{z.compnyAddres}}</h5>\n                                <p>{{z.content}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n\n    </div>\n</div>","export class Experience{\r\n    dateStart:string|Date;\r\n    dateEnd:string|Date;\r\n    compnyName:string;\r\n    compnyAddres:string;\r\n    position:string;\r\n    content:string;\r\n}","import { Experience } from \"./Experience\";\r\n\r\nexport class mainContect{\r\n    headline:string;\r\n    arr:Experience[]=[];\r\n    constructor(headline:string,arr:Experience[]){\r\nthis.headline=headline;\r\nthis.arr=arr;\r\n    }\r\n\r\n}","export class skill{\r\n    name!:string;\r\n    value!:number;\r\n    constructor(n:string,v:number){\r\nthis.name=n;\r\nthis.value=v\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCGE2FE-9jcb1ymt_C5OZd4rFyqYZKAd0w\",\n  authDomain: \"cv-design-4f0f8.firebaseapp.com\",\n  projectId: \"cv-design-4f0f8\",\n  storageBucket: \"cv-design-4f0f8.appspot.com\",\n  messagingSenderId: \"798381755581\",\n  appId: \"1:798381755581:web:771b2ef18ac4cf232a3bd4\",\n  measurementId: \"G-V3P492YQNR\"\n  \n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}